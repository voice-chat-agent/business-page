{"ast":null,"code":"var _jsxFileName = \"/home/girish/GIT/Business-page/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css';\n\n// Import images from the same folder\nimport RestaurantImg from './images/resturant.jpg';\nimport HospitalImg from './images/Hospital.jpg';\nimport SalonImg from './images/Salon.jpg';\nimport PoliceImg from './images/image.jpg';\nimport RandomImg from './images/image.jpg';\n// import ParkImg from './images/park.jpg';\n\n// Reusable Card Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  title,\n  image,\n  page\n}) => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => navigate(page),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title,\n      className: \"card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Card;\nconst Dashboard = ({\n  token\n}) => {\n  _s2();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDashboard = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/auth/dashboard', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          setDashboardData(data);\n        } else {\n          setError(data.error || 'Failed to fetch dashboard data');\n        }\n      } catch (err) {\n        setError('Server error');\n      }\n    };\n    if (token) fetchDashboard();\n  }, [token]);\n  if (!token) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-text\",\n    children: \"Access Denied. Please log in.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-text\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  if (!dashboardData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 30\n  }, this);\n\n  // Card Data with different names, images, and pages\n  const cardData = [{\n    title: \"Restaurant\",\n    image: RestaurantImg,\n    page: \"/restaurant\"\n  }, {\n    title: \"Hospital\",\n    image: HospitalImg,\n    page: \"/hospital\"\n  }, {\n    title: \"Salon\",\n    image: SalonImg,\n    page: \"/salon\"\n  }, {\n    title: \"Police\",\n    image: PoliceImg,\n    page: \"/police\"\n  }, {\n    title: \"Random Image\",\n    image: RandomImg,\n    page: \"/random\"\n  }\n  // { title: \"Park\", image: ParkImg, page: \"/park\" }\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [dashboardData.user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", dashboardData.user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: cardData.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n          title: card.title,\n          image: card.image,\n          page: card.page\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"g1TNYRyHp4EOhRYb8xsI/fbzIaY=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","RestaurantImg","HospitalImg","SalonImg","PoliceImg","RandomImg","jsxDEV","_jsxDEV","Card","title","image","page","_s","navigate","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","token","_s2","dashboardData","setDashboardData","error","setError","fetchDashboard","res","fetch","headers","Authorization","data","json","ok","err","cardData","user","username","map","card","index","_c2","$RefreshReg$"],"sources":["/home/girish/GIT/Business-page/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Dashboard.css'; \r\n\r\n// Import images from the same folder\r\nimport RestaurantImg from './images/resturant.jpg';\r\nimport HospitalImg from './images/Hospital.jpg';\r\nimport SalonImg from './images/Salon.jpg';\r\nimport PoliceImg from './images/image.jpg';\r\nimport RandomImg from './images/image.jpg';\r\n// import ParkImg from './images/park.jpg';\r\n\r\n// Reusable Card Component\r\nconst Card = ({ title, image, page }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"card\" onClick={() => navigate(page)}>\r\n      <img src={image} alt={title} className=\"card-image\" />\r\n      <h3>{title}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Dashboard = ({ token }) => {\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchDashboard = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/auth/dashboard', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = await res.json();\r\n        if (res.ok) {\r\n          setDashboardData(data);\r\n        } else {\r\n          setError(data.error || 'Failed to fetch dashboard data');\r\n        }\r\n      } catch (err) {\r\n        setError('Server error');\r\n      }\r\n    };\r\n\r\n    if (token) fetchDashboard();\r\n  }, [token]);\r\n\r\n  if (!token) return <p className=\"error-text\">Access Denied. Please log in.</p>;\r\n  if (error) return <p className=\"error-text\">{error}</p>;\r\n  if (!dashboardData) return <p>Loading dashboard...</p>;\r\n\r\n  // Card Data with different names, images, and pages\r\n  const cardData = [\r\n    { title: \"Restaurant\", image: RestaurantImg, page: \"/restaurant\" },\r\n    { title: \"Hospital\", image: HospitalImg, page: \"/hospital\" },\r\n    { title: \"Salon\", image: SalonImg, page: \"/salon\" },\r\n    { title: \"Police\", image: PoliceImg, page: \"/police\" },\r\n    { title: \"Random Image\", image: RandomImg, page: \"/random\" },\r\n    // { title: \"Park\", image: ParkImg, page: \"/park\" }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* User Info Section */}\r\n      {dashboardData.user && (\r\n        <div className=\"user-info\">\r\n          <h2>Welcome, {dashboardData.user.username}!</h2>\r\n        </div>\r\n      )}\r\n\r\n      {/* Centered Card Grid Layout */}\r\n      <div className=\"grid-wrapper\">\r\n        <div className=\"grid-container\">\r\n          {cardData.map((card, index) => (\r\n            <Card key={index} title={card.title} image={card.image} page={card.page} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}